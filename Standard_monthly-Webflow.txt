Page  Name
------------------
[Standard Monthly] Checkout

Parent Folder
---------------------
Subscribe

slug
-----------
checkout-standard-monthly

Inside <head> tag
--------------------------

<script src="https://js.chargebee.com/v2/chargebee.js"></script>
<script type="text/javascript" src="https://js.stripe.com/v2/"></script>

<!-- Setting the stripe publishable key.-->
<!-- Remember to replace with live key before production -->
<script>Stripe.setPublishableKey("pk_test_DV1SaSMjsjwxzsir8f4CXKqw");
</script>


Before </body> tag
-------------------------------

<script>
var Webflow = Webflow || [];
Webflow.push(function() {
  $(document).off('submit');
  $(document).ready(function() {
  $('#phone').mask('(000) 000-0000', {clearIfNotMatch: true});
  $('#zip').mask('00000-ZZZZ', {translation:  {'Z': {pattern: /[0-9]/, optional: true}}});
  let cntr = {US:"United States of America"};
    let slct = document.querySelector("#country");
    for (const key in cntr) slct.add(new Option(cntr[key],key),undefined);
    var cbInstance = Chargebee.init({
      site: "clearestimates-test",
      publishableKey: "test_IGqLcu0CiVF680fn1s5BQNU8LxgycVDyQ",
      domain: "https://clear-estimates.webflow.io"
    });
    var options={fonts:['https://fonts.googleapis.com/css2?family=Inter&display=swap'],classes:{focus:'focus',invalid:'invalid',empty:'empty',complete:'complete'},placeholder:{number:'1111 1111 1111 1111',expiry:'MM / YY',cvv:'CVV'},style:{base:{color:'#333',fontWeight:'400',fontFamily:'Inter, sans-serif',fontSize:'16px',fontSmoothing:'antialiased',lineHeight:'19px','::placeholder':{color:'#828282'}},invalid:{color:'#E94745',':focus':{color:'#e44d5f'},'::placeholder':{color:'#FFCCA5'}}}};
    cbInstance.load("components").then(() => {
         var cardComponent = cbInstance.createComponent("card", options);
        // Do we need this .mount?
        //cardComponent.mount();
    });
    
    $("#coupon").focus(function(){ $("#coupon").val(""); $("#coupon-error").css("display", "none");});
    
    // On Submit button
    $("#checkout-form").on("submit", function(event) {
        event.preventDefault();
        $("#submit-button").addClass("submit");
        $("#error").hide();
        
        // Create Stripe Token
        let expiryValue = ($("#test-expiry").val()).split("/");
        let expiryMonth = expiryValue[0];
        let expiryYear = expiryValue[1];
        Stripe.createToken({
            number: $("#test-number").val(),
            cvc: $("#test-cvv").val(),
            exp_month: expiryMonth,
            exp_year: expiryYear
        }, stripeResponseHandler);
        
        // Stripe Response
        function stripeResponseHandler(status, stripeResult) {
            console.log(stripeResult);
            console.log("Token is " + stripeResult.id);
            if (stripeResult.error) {
                // didn't work - show error
            } else {
                // if stripe token is received
                chargebeeSubscription(stripeResult.id);
            }
        }
        
        function chargebeeSubscription(stripeToken) {
          const data = Object.fromEntries(new FormData(event.target).entries());
          let user = {firstName:data.first_name,lastName:data.last_name,billingAddr1:data.address,billingCity:data.city,billingState:data.state,billingZip:data.zip,billingCountry:data.country};
          if(data.address2 !== "") user.billingAddr2 = data.address2;
          var myHeaders = new Headers();
          myHeaders.append("Content-Type", "application/x-www-form-urlencoded");
          
          //let cardComponent = cbInstance.createComponent("card", options);
          //console.log("Cardcomponent" + JSON.stringify(cardComponent));
          // TypeError: Cannot read properties of undefined 
          //cardComponent.tokenize(user).then(response => {
            //$("#submit-button").removeClass("submit");
            var par = new URLSearchParams();
            par.append("plan_id", "ce-monthly");
            par.append("customer[first_name]", data.first_name);
            par.append("customer[last_name]", data.last_name);
            par.append("customer[email]", data.email);
            if(data.phone !== "") par.append("customer[phone]", data.phone);
            par.append("billing_address[first_name]", data.first_name);
            par.append("billing_address[last_name]", data.last_name);
            par.append("billing_address[line1]", data.address);
            if(data.address2 !== "") par.append("billing_address[line2]", data.address2);
            par.append("billing_address[city]", data.city);
            par.append("billing_address[state]", data.state);
            par.append("billing_address[zip]", data.zip);
            par.append("billing_address[country]", data.country);
            par.append("customer[auto_collection]", "on");
            if(data.coupon !== "") par.append("coupon", data.coupon);
            // replaced with Stripe token
            //par.append("card[tmp_token]", stripeToken);
            // Maybe this instead?
            //par.append("stripeToken", stripeToken);
            par.append("payment_method[type]", "card");
						par.append("payment_method[gateway_account_id]", "gw_16CGd8T85Lvkh5Ql");
            //for live
            //par.append("payment_method[tmp_token]", stripeToken);
            
            //for test
            par.append("payment_method[tmp_token]", "tok_visa");
            
            let requestOptions={method:'POST',headers:myHeaders,body:par};
           
            
            fetch("https://webflow.clearestimates.com/ce-chargebee/subscriptions", requestOptions)
            .then(response => {
              let json = response.json();
              console.log(json);
              if (!response.ok) {
                console.log(response);
                if(response.error_param == "coupon") {
                  $("#coupon-error").css("display", "block");
                }
                throw new Error("HTTP status " + response.status);
              }
              return json;
            }).then(result => {
              $("#checkout-form").hide();
              $("#success").show();
              console.log(result);
            }).catch(error => {
              $("#submit-button").removeClass("submit");
              $("#error").show();
              console.log("Error",error);
            });
          }
    })
          
        })});
</script>

